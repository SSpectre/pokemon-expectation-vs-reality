{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libraries\\\\Documents\\\\React Projects\\\\pokemon-expectation-vs-reality\\\\src\\\\App.js\";\nimport React from 'react';\nimport { isMobile } from 'react-device-detect';\nimport './App.css';\nimport pLimit from 'p-limit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      useDBForImages: false,\n      totalLoadingSteps: 1,\n      currentLoadingSteps: 0,\n      pokemonList: [],\n      currentPokemon1: null,\n      currentPokemon2: null\n    };\n    this.selectNewPokemon = this.selectNewPokemon.bind(this);\n  }\n  componentDidMount() {\n    (async () => {\n      //fetch urls to pokemon objects from apis\n      const json = await this.fetchJson('https://pokeapi.co/api/v2/pokemon?limit=2000', false);\n      this.setState({\n        totalLoadingSteps: json.count\n      });\n      const pokemonUrls = await json.results;\n\n      //limit to 400 simultaneous API requests\n      const limit = pLimit(400);\n      const pokemonList = await Promise.all(pokemonUrls.map(async pokemon => {\n        return await limit(() => this.fetchJson(pokemon.url, true));\n      }));\n      this.setState({\n        pokemonList: pokemonList\n      });\n\n      //api's pokemon object doesn't include national dex number\n      //fetch from pokemon-species and associate it with pokemon\n      const species = await Promise.all(this.state.pokemonList.map(async pokemon => {\n        return await limit(() => this.fetchJson(pokemon.species.url, true));\n      }));\n      const speciesId = species.map(pokemon => pokemon.id);\n      let tempPokemon = this.state.pokemonList.slice();\n      for (let i = 0; i < speciesId.length; i++) {\n        tempPokemon[i].species.id = speciesId[i];\n      }\n      let filteredPokemon = this.filterAndFormat(tempPokemon);\n\n      //place alternate forms after base forms\n      filteredPokemon.sort((a, b) => a.species.id - b.species.id);\n      this.setState({\n        pokemonList: filteredPokemon\n      });\n      this.selectNewPokemon();\n    })();\n  }\n  fetchJson(url, loadingStep) {\n    let response = fetch(url).then(result => {\n      if (loadingStep) {\n        this.setState(prevState => {\n          return {\n            currentLoadingSteps: prevState.currentLoadingSteps + 1\n          };\n        });\n      }\n      const json = result.json();\n      return json;\n    });\n    return response;\n  }\n  filterAndFormat(originalList) {\n    let filteredPokemon;\n    if (this.state.useDBForImages) {\n      //filter out forms that have no pokemondb artwork or only minor differences\n      filteredPokemon = originalList.filter((value, index, arr) => {\n        let tempName = value.name;\n        let result = true;\n        result = !tempName.match(/-totem/g);\n        result = result && !tempName.match(/-cap$/g);\n        result = result && !tempName.match(/-cosplay$/g);\n        result = result && !tempName.match(/castform-/g);\n        result = result && !tempName.match(/-battle-bond$/g);\n        result = result && !tempName.match(/-eternal$/g);\n        result = result && !tempName.match(/minior-(?!red)/g);\n        result = result && !tempName.match(/-power-construct$/g);\n        result = result && !tempName.match(/-own-tempo$/g);\n        result = result && !tempName.match(/-busted$/g);\n        result = result && !tempName.match(/-original$/g);\n        result = result && !tempName.match(/cramorant-/g);\n        result = result && !tempName.match(/-low-key-gmax$/g);\n        result = result && !tempName.match(/-eternamax$/g);\n        result = result && !tempName.match(/-dada$/g);\n        result = result && !tempName.match(/-bloodmoon$/g);\n        result = result && !tempName.match(/-family-of-three$/g);\n        result = result && !tempName.match(/squawkabilly-/g);\n        result = result && !tempName.match(/-three-segment$/g);\n        result = result && !tempName.match(/koraidon-/g);\n        result = result && !tempName.match(/miraidon-/g);\n        result = result && !tempName.match(/ogerpon-/g);\n        return result;\n      });\n\n      //change form names to how pokemondb formats them\n      for (const pokemon of filteredPokemon) {\n        pokemon.name = pokemon.name.replace(/gmax/g, 'gigantamax');\n        pokemon.name = pokemon.name.replace(/alola/g, 'alolan');\n        pokemon.name = pokemon.name.replace(/galar/g, 'galarian');\n        pokemon.name = pokemon.name.replace(/hisui/g, 'hisuian');\n        pokemon.name = pokemon.name.replace(/paldea/g, 'paldean');\n        pokemon.name = pokemon.name.replace(/starter/g, 'lets-go');\n        pokemon.name = pokemon.name.replace(/-red$/g, '-core');\n        pokemon.name = pokemon.name.replace(/-red-meteor$/g, '-meteor');\n        pokemon.name = pokemon.name.replace(/-disguised$/g, '');\n        pokemon.name = pokemon.name.replace(/necrozma-dusk/g, 'necrozma-dusk-mane');\n        pokemon.name = pokemon.name.replace(/necrozma-dawn/g, 'necrozma-dawn-wings');\n        pokemon.name = pokemon.name.replace(/amped-/g, '');\n        pokemon.name = pokemon.name.replace(/zacian$/g, 'zacian-hero');\n        pokemon.name = pokemon.name.replace(/zamazenta$/g, 'zamazenta-hero');\n        pokemon.name = pokemon.name.replace(/calyrex-ice$/g, 'calyrex-ice-rider');\n        pokemon.name = pokemon.name.replace(/calyrex-shadow$/g, 'calyrex-shadow-rider');\n        pokemon.name = pokemon.name.replace(/-combat-breed$/g, '');\n        pokemon.name = pokemon.name.replace(/paldean-blaze-breed$/g, 'blaze');\n        pokemon.name = pokemon.name.replace(/paldean-aqua-breed$/g, 'aqua');\n      }\n    } else {\n      //filter out forms that have no artwork or only minor differences\n      filteredPokemon = originalList.filter((value, index, arr) => {\n        let tempName = value.name;\n        let result = true;\n        result = !tempName.match(/-totem/g);\n        result = result && !tempName.match(/-cap$/g);\n        result = result && !tempName.match(/-cosplay$/g);\n        result = result && !tempName.match(/-battle-bond$/g);\n        result = result && !tempName.match(/minior-(?!red)/g);\n        result = result && !tempName.match(/-power-construct$/g);\n        result = result && !tempName.match(/-own-tempo$/g);\n        result = result && !tempName.match(/-busted$/g);\n        result = result && !tempName.match(/-original$/g);\n        result = result && !tempName.match(/cramorant-/g);\n        result = result && !tempName.match(/-low-key-gmax$/g);\n        result = result && !tempName.match(/-dada$/g);\n        result = result && !tempName.match(/koraidon-/g);\n        result = result && !tempName.match(/miraidon-/g);\n        return result;\n      });\n\n      //change form names to improve formatting\n      for (const pokemon of filteredPokemon) {\n        pokemon.name = pokemon.name.replace(/gmax/g, 'gigantamax');\n        pokemon.name = pokemon.name.replace(/-red$/g, '-core');\n        pokemon.name = pokemon.name.replace(/-red-meteor$/g, '-meteor');\n        pokemon.name = pokemon.name.replace(/-disguised$/g, '');\n        pokemon.name = pokemon.name.replace(/necrozma-dusk/g, 'necrozma-dusk-mane');\n        pokemon.name = pokemon.name.replace(/necrozma-dawn/g, 'necrozma-dawn-wings');\n        pokemon.name = pokemon.name.replace(/amped-/g, '');\n        pokemon.name = pokemon.name.replace(/calyrex-ice$/g, 'calyrex-ice-rider');\n        pokemon.name = pokemon.name.replace(/calyrex-shadow$/g, 'calyrex-shadow-rider');\n        pokemon.name = pokemon.name.replace(/oinkologne$/g, 'oinkologne-male');\n      }\n    }\n    return filteredPokemon;\n  }\n  async selectNewPokemon() {\n    let random1 = Math.floor(Math.random() * this.state.pokemonList.length);\n    let random2 = Math.floor(Math.random() * this.state.pokemonList.length);\n    await this.setState(prevState => {\n      console.log(random1);\n      console.log(random2);\n      console.log(prevState.pokemonList[random1]);\n      console.log(prevState.pokemonList[random2]);\n      return {\n        currentPokemon1: prevState.pokemonList[random1],\n        currentPokemon2: prevState.pokemonList[random2]\n      };\n    });\n    console.log(this.state.currentPokemon1);\n    console.log(this.state.currentPokemon2);\n  }\n  getImageUrl(pokemon) {\n    let imageUrl;\n    if (this.state.useDBForImages) {\n      imageUrl = 'https://img.pokemondb.net/artwork/' + pokemon.name + '.jpg';\n    } else {\n      let imageBase = pokemon.sprites.other;\n      imageUrl = imageBase['official-artwork']['front_default'];\n    }\n    return imageUrl;\n  }\n  render() {\n    let loaded = this.state.currentPokemon1 && this.state.currentPokemon2;\n    let selection;\n    if (loaded) {\n      let imageUrl1 = this.getImageUrl(this.state.currentPokemon1);\n      let imageUrl2 = this.getImageUrl(this.state.currentPokemon2);\n      let imageClassName = isMobile ? 'pokemon-img-mobile' : 'pokemon-img';\n      selection = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: imageClassName,\n            src: imageUrl1,\n            alt: this.state.currentPokemon1.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: imageClassName,\n            src: imageUrl2,\n            alt: this.state.currentPokemon2.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 5\n      }, this);\n    } else {\n      let percentage = Math.floor(this.state.currentLoadingSteps / this.state.totalLoadingSteps * 100);\n      selection = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Loading (\", percentage, \"%)...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 5\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 4\n    }, this);\n  }\n}","map":{"version":3,"names":["React","isMobile","pLimit","jsxDEV","_jsxDEV","App","Component","constructor","props","state","useDBForImages","totalLoadingSteps","currentLoadingSteps","pokemonList","currentPokemon1","currentPokemon2","selectNewPokemon","bind","componentDidMount","json","fetchJson","setState","count","pokemonUrls","results","limit","Promise","all","map","pokemon","url","species","speciesId","id","tempPokemon","slice","i","length","filteredPokemon","filterAndFormat","sort","a","b","loadingStep","response","fetch","then","result","prevState","originalList","filter","value","index","arr","tempName","name","match","replace","random1","Math","floor","random","random2","console","log","getImageUrl","imageUrl","imageBase","sprites","other","render","loaded","selection","imageUrl1","imageUrl2","imageClassName","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","percentage"],"sources":["D:/Libraries/Documents/React Projects/pokemon-expectation-vs-reality/src/App.js"],"sourcesContent":["import React from 'react';\nimport { isMobile } from 'react-device-detect';\nimport './App.css';\nimport pLimit from 'p-limit';\n\nexport default class App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tuseDBForImages: false,\n\t\t\ttotalLoadingSteps: 1,\n\t\t\tcurrentLoadingSteps: 0,\n\t\t\tpokemonList: [],\n\t\t\tcurrentPokemon1: null,\n\t\t\tcurrentPokemon2: null\n\t\t}\n\n\t\tthis.selectNewPokemon = this.selectNewPokemon.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\t(async () => {\n\t\t\t//fetch urls to pokemon objects from apis\n\t\t\tconst json = await this.fetchJson('https://pokeapi.co/api/v2/pokemon?limit=2000', false);\n\t\t\tthis.setState({\n\t\t\t\ttotalLoadingSteps: json.count\n\t\t\t});\n\t\t\tconst pokemonUrls = await json.results;\n\n\t\t\t//limit to 400 simultaneous API requests\n\t\t\tconst limit = pLimit(400);\n\n\t\t\tconst pokemonList = await Promise.all(\n\t\t\t\tpokemonUrls.map(async (pokemon) => {\n\t\t\t\t\treturn await limit(() => this.fetchJson(pokemon.url, true));\n\t\t\t\t})\n\t\t\t);\n\t\t\tthis.setState({\n\t\t\t\tpokemonList: pokemonList,\n\t\t\t});\n\n\t\t\t//api's pokemon object doesn't include national dex number\n\t\t\t//fetch from pokemon-species and associate it with pokemon\n\t\t\tconst species = await Promise.all(\n\t\t\t\tthis.state.pokemonList.map(async (pokemon) => {\n\t\t\t\t\treturn await limit(() => this.fetchJson(pokemon.species.url, true));\n\t\t\t\t})\n\t\t\t);\n\t\t\tconst speciesId = species.map(pokemon => pokemon.id);\n\t\t\tlet tempPokemon = this.state.pokemonList.slice();\n\n\t\t\tfor (let i = 0; i < speciesId.length; i++) {\n\t\t\t\ttempPokemon[i].species.id = speciesId[i];\n\t\t\t}\n\n\t\t\tlet filteredPokemon = this.filterAndFormat(tempPokemon);\n\n\t\t\t//place alternate forms after base forms\n\t\t\tfilteredPokemon.sort((a, b) => a.species.id - b.species.id);\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tpokemonList: filteredPokemon,\n\t\t\t});\n\n\t\t\tthis.selectNewPokemon();\n\t\t})();\n\t}\n\n\tfetchJson(url, loadingStep) {\n\t\tlet response = fetch(url)\n\t\t.then(\n\t\t\t(result) => {\n\t\t\t\tif (loadingStep) {\n\t\t\t\t\tthis.setState(prevState => {\n\t\t\t\t\t\treturn {currentLoadingSteps: prevState.currentLoadingSteps + 1};\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst json = result.json();\n\t\t\t\treturn json;\n\t\t\t}\n\t\t);\n\n\t\treturn response;\n\t}\n\n\tfilterAndFormat(originalList) {\n\t\tlet filteredPokemon;\n\n\t\tif (this.state.useDBForImages) {\n\t\t\t//filter out forms that have no pokemondb artwork or only minor differences\n\t\t\tfilteredPokemon = originalList.filter((value, index, arr) => {\n\t\t\t\tlet tempName = value.name;\n\t\t\t\tlet result = true;\n\n\t\t\t\tresult = !tempName.match(/-totem/g);\n\t\t\t\tresult = result && !tempName.match(/-cap$/g);\n\t\t\t\tresult = result && !tempName.match(/-cosplay$/g);\n\t\t\t\tresult = result && !tempName.match(/castform-/g);\n\t\t\t\tresult = result && !tempName.match(/-battle-bond$/g);\n\t\t\t\tresult = result && !tempName.match(/-eternal$/g);\n\t\t\t\tresult = result && !tempName.match(/minior-(?!red)/g);\n\t\t\t\tresult = result && !tempName.match(/-power-construct$/g);\n\t\t\t\tresult = result && !tempName.match(/-own-tempo$/g);\n\t\t\t\tresult = result && !tempName.match(/-busted$/g);\n\t\t\t\tresult = result && !tempName.match(/-original$/g);\n\t\t\t\tresult = result && !tempName.match(/cramorant-/g);\n\t\t\t\tresult = result && !tempName.match(/-low-key-gmax$/g);\n\t\t\t\tresult = result && !tempName.match(/-eternamax$/g);\n\t\t\t\tresult = result && !tempName.match(/-dada$/g);\n\t\t\t\tresult = result && !tempName.match(/-bloodmoon$/g);\n\t\t\t\tresult = result && !tempName.match(/-family-of-three$/g);\n\t\t\t\tresult = result && !tempName.match(/squawkabilly-/g);\n\t\t\t\tresult = result && !tempName.match(/-three-segment$/g);\n\t\t\t\tresult = result && !tempName.match(/koraidon-/g);\n\t\t\t\tresult = result && !tempName.match(/miraidon-/g);\n\t\t\t\tresult = result && !tempName.match(/ogerpon-/g);\n\n\t\t\t\treturn result;\n\t\t\t})\n\n\t\t\t//change form names to how pokemondb formats them\n\t\t\tfor (const pokemon of filteredPokemon) {\n\t\t\t\tpokemon.name = pokemon.name.replace(/gmax/g, 'gigantamax');\n\t\t\t\tpokemon.name = pokemon.name.replace(/alola/g, 'alolan');\n\t\t\t\tpokemon.name = pokemon.name.replace(/galar/g, 'galarian');\n\t\t\t\tpokemon.name = pokemon.name.replace(/hisui/g, 'hisuian');\n\t\t\t\tpokemon.name = pokemon.name.replace(/paldea/g, 'paldean');\n\t\t\t\tpokemon.name = pokemon.name.replace(/starter/g, 'lets-go');\n\t\t\t\tpokemon.name = pokemon.name.replace(/-red$/g, '-core');\n\t\t\t\tpokemon.name = pokemon.name.replace(/-red-meteor$/g, '-meteor');\n\t\t\t\tpokemon.name = pokemon.name.replace(/-disguised$/g, '');\n\t\t\t\tpokemon.name = pokemon.name.replace(/necrozma-dusk/g, 'necrozma-dusk-mane');\n\t\t\t\tpokemon.name = pokemon.name.replace(/necrozma-dawn/g, 'necrozma-dawn-wings');\n\t\t\t\tpokemon.name = pokemon.name.replace(/amped-/g, '');\n\t\t\t\tpokemon.name = pokemon.name.replace(/zacian$/g, 'zacian-hero');\n\t\t\t\tpokemon.name = pokemon.name.replace(/zamazenta$/g, 'zamazenta-hero');\n\t\t\t\tpokemon.name = pokemon.name.replace(/calyrex-ice$/g, 'calyrex-ice-rider');\n\t\t\t\tpokemon.name = pokemon.name.replace(/calyrex-shadow$/g, 'calyrex-shadow-rider');\n\t\t\t\tpokemon.name = pokemon.name.replace(/-combat-breed$/g, '');\n\t\t\t\tpokemon.name = pokemon.name.replace(/paldean-blaze-breed$/g, 'blaze');\n\t\t\t\tpokemon.name = pokemon.name.replace(/paldean-aqua-breed$/g, 'aqua');\n\t\t\t}\n\t\t} else {\n\t\t\t//filter out forms that have no artwork or only minor differences\n\t\t\tfilteredPokemon = originalList.filter((value, index, arr) => {\n\t\t\t\tlet tempName = value.name;\n\t\t\t\tlet result = true;\n\n\t\t\t\tresult = !tempName.match(/-totem/g);\n\t\t\t\tresult = result && !tempName.match(/-cap$/g);\n\t\t\t\tresult = result && !tempName.match(/-cosplay$/g);\n\t\t\t\tresult = result && !tempName.match(/-battle-bond$/g);\n\t\t\t\tresult = result && !tempName.match(/minior-(?!red)/g);\n\t\t\t\tresult = result && !tempName.match(/-power-construct$/g);\n\t\t\t\tresult = result && !tempName.match(/-own-tempo$/g);\n\t\t\t\tresult = result && !tempName.match(/-busted$/g);\n\t\t\t\tresult = result && !tempName.match(/-original$/g);\n\t\t\t\tresult = result && !tempName.match(/cramorant-/g);\n\t\t\t\tresult = result && !tempName.match(/-low-key-gmax$/g);\n\t\t\t\tresult = result && !tempName.match(/-dada$/g);\n\t\t\t\tresult = result && !tempName.match(/koraidon-/g);\n\t\t\t\tresult = result && !tempName.match(/miraidon-/g);\n\n\t\t\t\treturn result;\n\t\t\t})\n\n\t\t\t//change form names to improve formatting\n\t\t\tfor (const pokemon of filteredPokemon) {\n\t\t\t\tpokemon.name = pokemon.name.replace(/gmax/g, 'gigantamax');\n\t\t\t\tpokemon.name = pokemon.name.replace(/-red$/g, '-core');\n\t\t\t\tpokemon.name = pokemon.name.replace(/-red-meteor$/g, '-meteor');\n\t\t\t\tpokemon.name = pokemon.name.replace(/-disguised$/g, '');\n\t\t\t\tpokemon.name = pokemon.name.replace(/necrozma-dusk/g, 'necrozma-dusk-mane');\n\t\t\t\tpokemon.name = pokemon.name.replace(/necrozma-dawn/g, 'necrozma-dawn-wings');\n\t\t\t\tpokemon.name = pokemon.name.replace(/amped-/g, '');\n\t\t\t\tpokemon.name = pokemon.name.replace(/calyrex-ice$/g, 'calyrex-ice-rider');\n\t\t\t\tpokemon.name = pokemon.name.replace(/calyrex-shadow$/g, 'calyrex-shadow-rider');\n\t\t\t\tpokemon.name = pokemon.name.replace(/oinkologne$/g, 'oinkologne-male');\n\t\t\t}\n\t\t}\n\n\t\treturn filteredPokemon;\n\t}\n\n\tasync selectNewPokemon() {\n\t\tlet random1 = Math.floor(Math.random() * this.state.pokemonList.length);\n\t\tlet random2 = Math.floor(Math.random() * this.state.pokemonList.length);\n\n\t\tawait this.setState(prevState => {\n\t\t\tconsole.log(random1);\n\t\t\tconsole.log(random2);\n\t\t\tconsole.log(prevState.pokemonList[random1]);\n\t\t\tconsole.log(prevState.pokemonList[random2]);\n\t\t\treturn {\n\t\t\t\tcurrentPokemon1: prevState.pokemonList[random1],\n\t\t\t\tcurrentPokemon2: prevState.pokemonList[random2]\n\t\t\t}\n\t\t});\n\n\t\tconsole.log(this.state.currentPokemon1);\n\t\tconsole.log(this.state.currentPokemon2);\n\t}\n\n\tgetImageUrl(pokemon) {\n\t\tlet imageUrl;\n\t\tif (this.state.useDBForImages) {\n\t\t\timageUrl = 'https://img.pokemondb.net/artwork/' + pokemon.name + '.jpg'\n\t\t} else {\n\t\t\tlet imageBase = pokemon.sprites.other\n\t\t\timageUrl = imageBase['official-artwork']['front_default'];\n\t\t}\n\n\t\treturn imageUrl;\n\t}\n\n\trender() {\n\t\tlet loaded = this.state.currentPokemon1 && this.state.currentPokemon2;\n\t\tlet selection;\n\n\t\tif (loaded) {\n\t\t\tlet imageUrl1 = this.getImageUrl(this.state.currentPokemon1);\n\t\t\tlet imageUrl2 = this.getImageUrl(this.state.currentPokemon2);\n\t\t\tlet imageClassName = isMobile ? 'pokemon-img-mobile' : 'pokemon-img';\n\n\t\t \tselection = (\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName={imageClassName}\n\t\t\t\t\t\t\tsrc={imageUrl1}\n\t\t\t\t\t\t\talt={this.state.currentPokemon1.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName={imageClassName}\n\t\t\t\t\t\t\tsrc={imageUrl2}\n\t\t\t\t\t\t\talt={this.state.currentPokemon2.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\tlet percentage = Math.floor((this.state.currentLoadingSteps / this.state.totalLoadingSteps) * 100);\n\t\t\tselection = (\n\t\t\t\t<h1>Loading ({percentage}%)...</h1>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{selection}\n\t\t\t</div>\n\t\t);\n\t}\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}