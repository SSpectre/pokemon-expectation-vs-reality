{"ast":null,"code":"/*\nHow it works:\n`this.#head` is an instance of `Node` which keeps track of its current value and nests another instance of `Node` that keeps the value that comes after it. When a value is provided to `.enqueue()`, the code needs to iterate through `this.#head`, going deeper and deeper to find the last value. However, iterating through every single item is slow. This problem is solved by saving a reference to the last value as `this.#tail` so that it can reference it to add a new value.\n*/\n\nclass Node {\n  value;\n  next;\n  constructor(value) {\n    this.value = value;\n  }\n}\nexport default class Queue {\n  #head;\n  #tail;\n  #size;\n  constructor() {\n    this.clear();\n  }\n  enqueue(value) {\n    const node = new Node(value);\n    if (this.#head) {\n      this.#tail.next = node;\n      this.#tail = node;\n    } else {\n      this.#head = node;\n      this.#tail = node;\n    }\n    this.#size++;\n  }\n  dequeue() {\n    const current = this.#head;\n    if (!current) {\n      return;\n    }\n    this.#head = this.#head.next;\n    this.#size--;\n    return current.value;\n  }\n  peek() {\n    if (!this.#head) {\n      return;\n    }\n    return this.#head.value;\n\n    // TODO: Node.js 18.\n    // return this.#head?.value;\n  }\n  clear() {\n    this.#head = undefined;\n    this.#tail = undefined;\n    this.#size = 0;\n  }\n  get size() {\n    return this.#size;\n  }\n  *[Symbol.iterator]() {\n    let current = this.#head;\n    while (current) {\n      yield current.value;\n      current = current.next;\n    }\n  }\n}","map":{"version":3,"names":["Node","value","next","constructor","Queue","head","tail","size","clear","enqueue","node","dequeue","current","peek","undefined","Symbol","iterator"],"sources":["D:/Libraries/Documents/React Projects/pokemon-expectation-vs-reality/node_modules/p-limit/node_modules/yocto-queue/index.js"],"sourcesContent":["/*\nHow it works:\n`this.#head` is an instance of `Node` which keeps track of its current value and nests another instance of `Node` that keeps the value that comes after it. When a value is provided to `.enqueue()`, the code needs to iterate through `this.#head`, going deeper and deeper to find the last value. However, iterating through every single item is slow. This problem is solved by saving a reference to the last value as `this.#tail` so that it can reference it to add a new value.\n*/\n\nclass Node {\n\tvalue;\n\tnext;\n\n\tconstructor(value) {\n\t\tthis.value = value;\n\t}\n}\n\nexport default class Queue {\n\t#head;\n\t#tail;\n\t#size;\n\n\tconstructor() {\n\t\tthis.clear();\n\t}\n\n\tenqueue(value) {\n\t\tconst node = new Node(value);\n\n\t\tif (this.#head) {\n\t\t\tthis.#tail.next = node;\n\t\t\tthis.#tail = node;\n\t\t} else {\n\t\t\tthis.#head = node;\n\t\t\tthis.#tail = node;\n\t\t}\n\n\t\tthis.#size++;\n\t}\n\n\tdequeue() {\n\t\tconst current = this.#head;\n\t\tif (!current) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#head = this.#head.next;\n\t\tthis.#size--;\n\t\treturn current.value;\n\t}\n\n\tpeek() {\n\t\tif (!this.#head) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.#head.value;\n\n\t\t// TODO: Node.js 18.\n\t\t// return this.#head?.value;\n\t}\n\n\tclear() {\n\t\tthis.#head = undefined;\n\t\tthis.#tail = undefined;\n\t\tthis.#size = 0;\n\t}\n\n\tget size() {\n\t\treturn this.#size;\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tlet current = this.#head;\n\n\t\twhile (current) {\n\t\t\tyield current.value;\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,CAAC;EACVC,KAAK;EACLC,IAAI;EAEJC,WAAWA,CAACF,KAAK,EAAE;IAClB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACnB;AACD;AAEA,eAAe,MAAMG,KAAK,CAAC;EAC1B,CAACC,IAAI;EACL,CAACC,IAAI;EACL,CAACC,IAAI;EAELJ,WAAWA,CAAA,EAAG;IACb,IAAI,CAACK,KAAK,CAAC,CAAC;EACb;EAEAC,OAAOA,CAACR,KAAK,EAAE;IACd,MAAMS,IAAI,GAAG,IAAIV,IAAI,CAACC,KAAK,CAAC;IAE5B,IAAI,IAAI,CAAC,CAACI,IAAI,EAAE;MACf,IAAI,CAAC,CAACC,IAAI,CAACJ,IAAI,GAAGQ,IAAI;MACtB,IAAI,CAAC,CAACJ,IAAI,GAAGI,IAAI;IAClB,CAAC,MAAM;MACN,IAAI,CAAC,CAACL,IAAI,GAAGK,IAAI;MACjB,IAAI,CAAC,CAACJ,IAAI,GAAGI,IAAI;IAClB;IAEA,IAAI,CAAC,CAACH,IAAI,EAAE;EACb;EAEAI,OAAOA,CAAA,EAAG;IACT,MAAMC,OAAO,GAAG,IAAI,CAAC,CAACP,IAAI;IAC1B,IAAI,CAACO,OAAO,EAAE;MACb;IACD;IAEA,IAAI,CAAC,CAACP,IAAI,GAAG,IAAI,CAAC,CAACA,IAAI,CAACH,IAAI;IAC5B,IAAI,CAAC,CAACK,IAAI,EAAE;IACZ,OAAOK,OAAO,CAACX,KAAK;EACrB;EAEAY,IAAIA,CAAA,EAAG;IACN,IAAI,CAAC,IAAI,CAAC,CAACR,IAAI,EAAE;MAChB;IACD;IAEA,OAAO,IAAI,CAAC,CAACA,IAAI,CAACJ,KAAK;;IAEvB;IACA;EACD;EAEAO,KAAKA,CAAA,EAAG;IACP,IAAI,CAAC,CAACH,IAAI,GAAGS,SAAS;IACtB,IAAI,CAAC,CAACR,IAAI,GAAGQ,SAAS;IACtB,IAAI,CAAC,CAACP,IAAI,GAAG,CAAC;EACf;EAEA,IAAIA,IAAIA,CAAA,EAAG;IACV,OAAO,IAAI,CAAC,CAACA,IAAI;EAClB;EAEA,EAAGQ,MAAM,CAACC,QAAQ,IAAI;IACrB,IAAIJ,OAAO,GAAG,IAAI,CAAC,CAACP,IAAI;IAExB,OAAOO,OAAO,EAAE;MACf,MAAMA,OAAO,CAACX,KAAK;MACnBW,OAAO,GAAGA,OAAO,CAACV,IAAI;IACvB;EACD;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}