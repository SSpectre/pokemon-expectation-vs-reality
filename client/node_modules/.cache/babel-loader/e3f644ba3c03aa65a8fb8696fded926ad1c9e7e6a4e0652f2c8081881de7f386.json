{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libraries\\\\Documents\\\\React Projects\\\\pokemon-expectation-vs-reality\\\\src\\\\App.js\";\nimport React from 'react';\nimport { isMobile } from 'react-device-detect';\nimport './App.css';\nimport pLimit from 'p-limit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      useDBForImages: false,\n      totalLoadingSteps: 1,\n      currentLoadingSteps: 0,\n      pokemonList: [],\n      currentPokemon1: null,\n      currentPokemon2: null\n    };\n    this.selectNewPokemon = this.selectNewPokemon.bind(this);\n  }\n  componentDidMount() {\n    (async () => {\n      //fetch urls to pokemon objects from apis\n      const json = await this.fetchJson('https://pokeapi.co/api/v2/pokemon?limit=2000', false);\n      this.setState({\n        totalLoadingSteps: json.count\n      });\n      const pokemonUrls = await json.results;\n\n      //limit to 1000 simultaneous API requests\n      const limit = pLimit(400);\n      const pokemonList = await Promise.all(pokemonUrls.map(async pokemon => {\n        return await limit(() => this.fetchJson(pokemon.url, true));\n      }));\n      this.setState({\n        pokemonList: pokemonList\n      });\n      let tempPokemon = this.state.pokemonList.slice();\n      let filteredPokemon = this.filterAndFormat(tempPokemon);\n      this.setState({\n        pokemonList: filteredPokemon\n      });\n      this.selectNewPokemon();\n    })();\n  }\n  fetchJson(url, loadingStep) {\n    let response = fetch(url).then(result => {\n      if (loadingStep) {\n        this.setState(prevState => {\n          return {\n            currentLoadingSteps: prevState.currentLoadingSteps + 1\n          };\n        });\n      }\n      const json = result.json();\n      return json;\n    });\n    return response;\n  }\n  filterAndFormat(originalList) {\n    let filteredPokemon;\n    if (this.state.useDBForImages) {\n      //filter out forms that have no pokemondb artwork or only minor differences\n      filteredPokemon = originalList.filter((value, index, arr) => {\n        let tempName = value.name;\n        let result = true;\n        result = !tempName.match(/-totem/g);\n        result = result && !tempName.match(/-cap$/g);\n        result = result && !tempName.match(/-cosplay$/g);\n        result = result && !tempName.match(/castform-/g);\n        result = result && !tempName.match(/-battle-bond$/g);\n        result = result && !tempName.match(/-eternal$/g);\n        result = result && !tempName.match(/minior-(?!red)/g);\n        result = result && !tempName.match(/-power-construct$/g);\n        result = result && !tempName.match(/-own-tempo$/g);\n        result = result && !tempName.match(/-busted$/g);\n        result = result && !tempName.match(/-original$/g);\n        result = result && !tempName.match(/cramorant-/g);\n        result = result && !tempName.match(/-low-key-gmax$/g);\n        result = result && !tempName.match(/-eternamax$/g);\n        result = result && !tempName.match(/-dada$/g);\n        result = result && !tempName.match(/-bloodmoon$/g);\n        result = result && !tempName.match(/-family-of-three$/g);\n        result = result && !tempName.match(/squawkabilly-/g);\n        result = result && !tempName.match(/-three-segment$/g);\n        result = result && !tempName.match(/koraidon-/g);\n        result = result && !tempName.match(/miraidon-/g);\n        result = result && !tempName.match(/ogerpon-/g);\n        return result;\n      });\n\n      //change form names to how pokemondb formats them\n      for (const pokemon of filteredPokemon) {\n        pokemon.name = pokemon.name.replace(/gmax/g, 'gigantamax');\n        pokemon.name = pokemon.name.replace(/alola/g, 'alolan');\n        pokemon.name = pokemon.name.replace(/galar/g, 'galarian');\n        pokemon.name = pokemon.name.replace(/hisui/g, 'hisuian');\n        pokemon.name = pokemon.name.replace(/paldea/g, 'paldean');\n        pokemon.name = pokemon.name.replace(/starter/g, 'lets-go');\n        pokemon.name = pokemon.name.replace(/-red$/g, '-core');\n        pokemon.name = pokemon.name.replace(/-red-meteor$/g, '-meteor');\n        pokemon.name = pokemon.name.replace(/-disguised$/g, '');\n        pokemon.name = pokemon.name.replace(/necrozma-dusk/g, 'necrozma-dusk-mane');\n        pokemon.name = pokemon.name.replace(/necrozma-dawn/g, 'necrozma-dawn-wings');\n        pokemon.name = pokemon.name.replace(/amped-/g, '');\n        pokemon.name = pokemon.name.replace(/zacian$/g, 'zacian-hero');\n        pokemon.name = pokemon.name.replace(/zamazenta$/g, 'zamazenta-hero');\n        pokemon.name = pokemon.name.replace(/calyrex-ice$/g, 'calyrex-ice-rider');\n        pokemon.name = pokemon.name.replace(/calyrex-shadow$/g, 'calyrex-shadow-rider');\n        pokemon.name = pokemon.name.replace(/-combat-breed$/g, '');\n        pokemon.name = pokemon.name.replace(/paldean-blaze-breed$/g, 'blaze');\n        pokemon.name = pokemon.name.replace(/paldean-aqua-breed$/g, 'aqua');\n      }\n    } else {\n      //filter out forms that have no artwork or only minor differences\n      filteredPokemon = originalList.filter((value, index, arr) => {\n        let tempName = value.name;\n        let result = true;\n        result = !tempName.match(/-totem/g);\n        result = result && !tempName.match(/-cap$/g);\n        result = result && !tempName.match(/-cosplay$/g);\n        result = result && !tempName.match(/-battle-bond$/g);\n        result = result && !tempName.match(/minior-(?!red)/g);\n        result = result && !tempName.match(/-power-construct$/g);\n        result = result && !tempName.match(/-own-tempo$/g);\n        result = result && !tempName.match(/-busted$/g);\n        result = result && !tempName.match(/-original$/g);\n        result = result && !tempName.match(/cramorant-/g);\n        result = result && !tempName.match(/-low-key-gmax$/g);\n        result = result && !tempName.match(/-dada$/g);\n        result = result && !tempName.match(/koraidon-/g);\n        result = result && !tempName.match(/miraidon-/g);\n        return result;\n      });\n\n      //change form names to improve formatting\n      for (const pokemon of filteredPokemon) {\n        pokemon.name = pokemon.name.replace(/gmax/g, 'gigantamax');\n        pokemon.name = pokemon.name.replace(/-red$/g, '-core');\n        pokemon.name = pokemon.name.replace(/-red-meteor$/g, '-meteor');\n        pokemon.name = pokemon.name.replace(/-disguised$/g, '');\n        pokemon.name = pokemon.name.replace(/necrozma-dusk/g, 'necrozma-dusk-mane');\n        pokemon.name = pokemon.name.replace(/necrozma-dawn/g, 'necrozma-dawn-wings');\n        pokemon.name = pokemon.name.replace(/amped-/g, '');\n        pokemon.name = pokemon.name.replace(/calyrex-ice$/g, 'calyrex-ice-rider');\n        pokemon.name = pokemon.name.replace(/calyrex-shadow$/g, 'calyrex-shadow-rider');\n        pokemon.name = pokemon.name.replace(/oinkologne$/g, 'oinkologne-male');\n      }\n    }\n    return filteredPokemon;\n  }\n  selectNewPokemon() {\n    let random1 = Math.floor(Math.random() * this.state.pokemonList.length);\n    let random2 = Math.floor(Math.random() * this.state.pokemonList.length);\n    this.setState(prevState => {\n      return {\n        currentPokemon1: prevState.pokemonList[random1],\n        currentPokemon2: prevState.pokemonList[random2]\n      };\n    });\n  }\n  getImageUrl(pokemon) {\n    let imageUrl;\n    if (this.state.useDBForImages) {\n      imageUrl = 'https://img.pokemondb.net/artwork/' + pokemon.name + '.jpg';\n    } else {\n      let imageBase = pokemon.sprites.other;\n      imageUrl = imageBase['official-artwork']['front_default'];\n    }\n    return imageUrl;\n  }\n  render() {\n    let loaded = this.state.currentPokemon1 && this.state.currentPokemon2;\n    let selection;\n    if (loaded) {\n      let imageUrl1 = this.getImageUrl(this.state.currentPokemon1);\n      let imageUrl2 = this.getImageUrl(this.state.currentPokemon2);\n      let imageClassName = isMobile ? 'pokemon-img-mobile' : 'pokemon-img';\n      selection = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: imageClassName,\n            src: imageUrl1,\n            alt: this.state.currentPokemon1.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: imageClassName,\n            src: imageUrl2,\n            alt: this.state.currentPokemon2.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 5\n      }, this);\n    } else {\n      let percentage = Math.floor(this.state.currentLoadingSteps / this.state.totalLoadingSteps * 100);\n      selection = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Loading (\", percentage, \"%)...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 5\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 4\n    }, this);\n  }\n}","map":{"version":3,"names":["React","isMobile","pLimit","jsxDEV","_jsxDEV","App","Component","constructor","props","state","useDBForImages","totalLoadingSteps","currentLoadingSteps","pokemonList","currentPokemon1","currentPokemon2","selectNewPokemon","bind","componentDidMount","json","fetchJson","setState","count","pokemonUrls","results","limit","Promise","all","map","pokemon","url","tempPokemon","slice","filteredPokemon","filterAndFormat","loadingStep","response","fetch","then","result","prevState","originalList","filter","value","index","arr","tempName","name","match","replace","random1","Math","floor","random","length","random2","getImageUrl","imageUrl","imageBase","sprites","other","render","loaded","selection","imageUrl1","imageUrl2","imageClassName","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","percentage"],"sources":["D:/Libraries/Documents/React Projects/pokemon-expectation-vs-reality/src/App.js"],"sourcesContent":["import React from 'react';\nimport { isMobile } from 'react-device-detect';\nimport './App.css';\nimport pLimit from 'p-limit';\n\nexport default class App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tuseDBForImages: false,\n\t\t\ttotalLoadingSteps: 1,\n\t\t\tcurrentLoadingSteps: 0,\n\t\t\tpokemonList: [],\n\t\t\tcurrentPokemon1: null,\n\t\t\tcurrentPokemon2: null\n\t\t}\n\n\t\tthis.selectNewPokemon = this.selectNewPokemon.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\t(async () => {\n\t\t\t//fetch urls to pokemon objects from apis\n\t\t\tconst json = await this.fetchJson('https://pokeapi.co/api/v2/pokemon?limit=2000', false);\n\t\t\tthis.setState({\n\t\t\t\ttotalLoadingSteps: json.count\n\t\t\t});\n\t\t\tconst pokemonUrls = await json.results;\n\n\t\t\t//limit to 1000 simultaneous API requests\n\t\t\tconst limit = pLimit(400);\n\n\t\t\tconst pokemonList = await Promise.all(\n\t\t\t\tpokemonUrls.map(async (pokemon) => {\n\t\t\t\t\treturn await limit(() => this.fetchJson(pokemon.url, true));\n\t\t\t\t})\n\t\t\t);\n\t\t\tthis.setState({\n\t\t\t\tpokemonList: pokemonList,\n\t\t\t});\n\n\t\t\tlet tempPokemon = this.state.pokemonList.slice();\n\t\t\tlet filteredPokemon = this.filterAndFormat(tempPokemon);\n\t\t\tthis.setState({\n\t\t\t\tpokemonList: filteredPokemon,\n\t\t\t});\n\n\t\t\tthis.selectNewPokemon();\n\t\t})();\n\t}\n\n\tfetchJson(url, loadingStep) {\n\t\tlet response = fetch(url)\n\t\t.then(\n\t\t\t(result) => {\n\t\t\t\tif (loadingStep) {\n\t\t\t\t\tthis.setState(prevState => {\n\t\t\t\t\t\treturn {currentLoadingSteps: prevState.currentLoadingSteps + 1}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst json = result.json();\n\t\t\t\treturn json;\n\t\t\t}\n\t\t);\n\n\t\treturn response;\n\t}\n\n\tfilterAndFormat(originalList) {\n\t\tlet filteredPokemon;\n\n\t\tif (this.state.useDBForImages) {\n\t\t\t//filter out forms that have no pokemondb artwork or only minor differences\n\t\t\tfilteredPokemon = originalList.filter((value, index, arr) => {\n\t\t\t\tlet tempName = value.name;\n\t\t\t\tlet result = true;\n\n\t\t\t\tresult = !tempName.match(/-totem/g);\n\t\t\t\tresult = result && !tempName.match(/-cap$/g);\n\t\t\t\tresult = result && !tempName.match(/-cosplay$/g);\n\t\t\t\tresult = result && !tempName.match(/castform-/g);\n\t\t\t\tresult = result && !tempName.match(/-battle-bond$/g);\n\t\t\t\tresult = result && !tempName.match(/-eternal$/g);\n\t\t\t\tresult = result && !tempName.match(/minior-(?!red)/g);\n\t\t\t\tresult = result && !tempName.match(/-power-construct$/g);\n\t\t\t\tresult = result && !tempName.match(/-own-tempo$/g);\n\t\t\t\tresult = result && !tempName.match(/-busted$/g);\n\t\t\t\tresult = result && !tempName.match(/-original$/g);\n\t\t\t\tresult = result && !tempName.match(/cramorant-/g);\n\t\t\t\tresult = result && !tempName.match(/-low-key-gmax$/g);\n\t\t\t\tresult = result && !tempName.match(/-eternamax$/g);\n\t\t\t\tresult = result && !tempName.match(/-dada$/g);\n\t\t\t\tresult = result && !tempName.match(/-bloodmoon$/g);\n\t\t\t\tresult = result && !tempName.match(/-family-of-three$/g);\n\t\t\t\tresult = result && !tempName.match(/squawkabilly-/g);\n\t\t\t\tresult = result && !tempName.match(/-three-segment$/g);\n\t\t\t\tresult = result && !tempName.match(/koraidon-/g);\n\t\t\t\tresult = result && !tempName.match(/miraidon-/g);\n\t\t\t\tresult = result && !tempName.match(/ogerpon-/g);\n\n\t\t\t\treturn result;\n\t\t\t})\n\n\t\t\t//change form names to how pokemondb formats them\n\t\t\tfor (const pokemon of filteredPokemon) {\n\t\t\t\tpokemon.name = pokemon.name.replace(/gmax/g, 'gigantamax');\n\t\t\t\tpokemon.name = pokemon.name.replace(/alola/g, 'alolan');\n\t\t\t\tpokemon.name = pokemon.name.replace(/galar/g, 'galarian');\n\t\t\t\tpokemon.name = pokemon.name.replace(/hisui/g, 'hisuian');\n\t\t\t\tpokemon.name = pokemon.name.replace(/paldea/g, 'paldean');\n\t\t\t\tpokemon.name = pokemon.name.replace(/starter/g, 'lets-go');\n\t\t\t\tpokemon.name = pokemon.name.replace(/-red$/g, '-core');\n\t\t\t\tpokemon.name = pokemon.name.replace(/-red-meteor$/g, '-meteor');\n\t\t\t\tpokemon.name = pokemon.name.replace(/-disguised$/g, '');\n\t\t\t\tpokemon.name = pokemon.name.replace(/necrozma-dusk/g, 'necrozma-dusk-mane');\n\t\t\t\tpokemon.name = pokemon.name.replace(/necrozma-dawn/g, 'necrozma-dawn-wings');\n\t\t\t\tpokemon.name = pokemon.name.replace(/amped-/g, '');\n\t\t\t\tpokemon.name = pokemon.name.replace(/zacian$/g, 'zacian-hero');\n\t\t\t\tpokemon.name = pokemon.name.replace(/zamazenta$/g, 'zamazenta-hero');\n\t\t\t\tpokemon.name = pokemon.name.replace(/calyrex-ice$/g, 'calyrex-ice-rider');\n\t\t\t\tpokemon.name = pokemon.name.replace(/calyrex-shadow$/g, 'calyrex-shadow-rider');\n\t\t\t\tpokemon.name = pokemon.name.replace(/-combat-breed$/g, '');\n\t\t\t\tpokemon.name = pokemon.name.replace(/paldean-blaze-breed$/g, 'blaze');\n\t\t\t\tpokemon.name = pokemon.name.replace(/paldean-aqua-breed$/g, 'aqua');\n\t\t\t}\n\t\t} else {\n\t\t\t//filter out forms that have no artwork or only minor differences\n\t\t\tfilteredPokemon = originalList.filter((value, index, arr) => {\n\t\t\t\tlet tempName = value.name;\n\t\t\t\tlet result = true;\n\n\t\t\t\tresult = !tempName.match(/-totem/g);\n\t\t\t\tresult = result && !tempName.match(/-cap$/g);\n\t\t\t\tresult = result && !tempName.match(/-cosplay$/g);\n\t\t\t\tresult = result && !tempName.match(/-battle-bond$/g);\n\t\t\t\tresult = result && !tempName.match(/minior-(?!red)/g);\n\t\t\t\tresult = result && !tempName.match(/-power-construct$/g);\n\t\t\t\tresult = result && !tempName.match(/-own-tempo$/g);\n\t\t\t\tresult = result && !tempName.match(/-busted$/g);\n\t\t\t\tresult = result && !tempName.match(/-original$/g);\n\t\t\t\tresult = result && !tempName.match(/cramorant-/g);\n\t\t\t\tresult = result && !tempName.match(/-low-key-gmax$/g);\n\t\t\t\tresult = result && !tempName.match(/-dada$/g);\n\t\t\t\tresult = result && !tempName.match(/koraidon-/g);\n\t\t\t\tresult = result && !tempName.match(/miraidon-/g);\n\n\t\t\t\treturn result;\n\t\t\t})\n\n\t\t\t//change form names to improve formatting\n\t\t\tfor (const pokemon of filteredPokemon) {\n\t\t\t\tpokemon.name = pokemon.name.replace(/gmax/g, 'gigantamax');\n\t\t\t\tpokemon.name = pokemon.name.replace(/-red$/g, '-core');\n\t\t\t\tpokemon.name = pokemon.name.replace(/-red-meteor$/g, '-meteor');\n\t\t\t\tpokemon.name = pokemon.name.replace(/-disguised$/g, '');\n\t\t\t\tpokemon.name = pokemon.name.replace(/necrozma-dusk/g, 'necrozma-dusk-mane');\n\t\t\t\tpokemon.name = pokemon.name.replace(/necrozma-dawn/g, 'necrozma-dawn-wings');\n\t\t\t\tpokemon.name = pokemon.name.replace(/amped-/g, '');\n\t\t\t\tpokemon.name = pokemon.name.replace(/calyrex-ice$/g, 'calyrex-ice-rider');\n\t\t\t\tpokemon.name = pokemon.name.replace(/calyrex-shadow$/g, 'calyrex-shadow-rider');\n\t\t\t\tpokemon.name = pokemon.name.replace(/oinkologne$/g, 'oinkologne-male');\n\t\t\t}\n\t\t}\n\n\t\treturn filteredPokemon;\n\t}\n\n\tselectNewPokemon() {\n\t\tlet random1 = Math.floor(Math.random() * this.state.pokemonList.length);\n\t\tlet random2 = Math.floor(Math.random() * this.state.pokemonList.length);\n\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tcurrentPokemon1: prevState.pokemonList[random1],\n\t\t\t\tcurrentPokemon2: prevState.pokemonList[random2]\n\t\t\t}\n\t\t});\n\t}\n\n\tgetImageUrl(pokemon) {\n\t\tlet imageUrl;\n\t\tif (this.state.useDBForImages) {\n\t\t\timageUrl = 'https://img.pokemondb.net/artwork/' + pokemon.name + '.jpg'\n\t\t} else {\n\t\t\tlet imageBase = pokemon.sprites.other\n\t\t\timageUrl = imageBase['official-artwork']['front_default'];\n\t\t}\n\n\t\treturn imageUrl;\n\t}\n\n\trender() {\n\t\tlet loaded = this.state.currentPokemon1 && this.state.currentPokemon2;\n\t\tlet selection;\n\n\t\tif (loaded) {\n\t\t\tlet imageUrl1 = this.getImageUrl(this.state.currentPokemon1);\n\t\t\tlet imageUrl2 = this.getImageUrl(this.state.currentPokemon2);\n\t\t\tlet imageClassName = isMobile ? 'pokemon-img-mobile' : 'pokemon-img';\n\n\t\t \tselection = (\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName={imageClassName}\n\t\t\t\t\t\t\tsrc={imageUrl1}\n\t\t\t\t\t\t\talt={this.state.currentPokemon1.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName={imageClassName}\n\t\t\t\t\t\t\tsrc={imageUrl2}\n\t\t\t\t\t\t\talt={this.state.currentPokemon2.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\tlet percentage = Math.floor((this.state.currentLoadingSteps / this.state.totalLoadingSteps) * 100);\n\t\t\tselection = (\n\t\t\t\t<h1>Loading ({percentage}%)...</h1>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{selection}\n\t\t\t</div>\n\t\t);\n\t}\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,eAAe,MAAMC,GAAG,SAASL,KAAK,CAACM,SAAS,CAAC;EAChDC,WAAWA,CAACC,KAAK,EAAE;IAClB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACZC,cAAc,EAAE,KAAK;MACrBC,iBAAiB,EAAE,CAAC;MACpBC,mBAAmB,EAAE,CAAC;MACtBC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE,IAAI;MACrBC,eAAe,EAAE;IAClB,CAAC;IAED,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAAC;EACzD;EAEAC,iBAAiBA,CAAA,EAAG;IACnB,CAAC,YAAY;MACZ;MACA,MAAMC,IAAI,GAAG,MAAM,IAAI,CAACC,SAAS,CAAC,8CAA8C,EAAE,KAAK,CAAC;MACxF,IAAI,CAACC,QAAQ,CAAC;QACbV,iBAAiB,EAAEQ,IAAI,CAACG;MACzB,CAAC,CAAC;MACF,MAAMC,WAAW,GAAG,MAAMJ,IAAI,CAACK,OAAO;;MAEtC;MACA,MAAMC,KAAK,GAAGvB,MAAM,CAAC,GAAG,CAAC;MAEzB,MAAMW,WAAW,GAAG,MAAMa,OAAO,CAACC,GAAG,CACpCJ,WAAW,CAACK,GAAG,CAAC,MAAOC,OAAO,IAAK;QAClC,OAAO,MAAMJ,KAAK,CAAC,MAAM,IAAI,CAACL,SAAS,CAACS,OAAO,CAACC,GAAG,EAAE,IAAI,CAAC,CAAC;MAC5D,CAAC,CACF,CAAC;MACD,IAAI,CAACT,QAAQ,CAAC;QACbR,WAAW,EAAEA;MACd,CAAC,CAAC;MAEF,IAAIkB,WAAW,GAAG,IAAI,CAACtB,KAAK,CAACI,WAAW,CAACmB,KAAK,CAAC,CAAC;MAChD,IAAIC,eAAe,GAAG,IAAI,CAACC,eAAe,CAACH,WAAW,CAAC;MACvD,IAAI,CAACV,QAAQ,CAAC;QACbR,WAAW,EAAEoB;MACd,CAAC,CAAC;MAEF,IAAI,CAACjB,gBAAgB,CAAC,CAAC;IACxB,CAAC,EAAE,CAAC;EACL;EAEAI,SAASA,CAACU,GAAG,EAAEK,WAAW,EAAE;IAC3B,IAAIC,QAAQ,GAAGC,KAAK,CAACP,GAAG,CAAC,CACxBQ,IAAI,CACHC,MAAM,IAAK;MACX,IAAIJ,WAAW,EAAE;QAChB,IAAI,CAACd,QAAQ,CAACmB,SAAS,IAAI;UAC1B,OAAO;YAAC5B,mBAAmB,EAAE4B,SAAS,CAAC5B,mBAAmB,GAAG;UAAC,CAAC;QAChE,CAAC,CAAC;MACH;MAEA,MAAMO,IAAI,GAAGoB,MAAM,CAACpB,IAAI,CAAC,CAAC;MAC1B,OAAOA,IAAI;IACZ,CACD,CAAC;IAED,OAAOiB,QAAQ;EAChB;EAEAF,eAAeA,CAACO,YAAY,EAAE;IAC7B,IAAIR,eAAe;IAEnB,IAAI,IAAI,CAACxB,KAAK,CAACC,cAAc,EAAE;MAC9B;MACAuB,eAAe,GAAGQ,YAAY,CAACC,MAAM,CAAC,CAACC,KAAK,EAAEC,KAAK,EAAEC,GAAG,KAAK;QAC5D,IAAIC,QAAQ,GAAGH,KAAK,CAACI,IAAI;QACzB,IAAIR,MAAM,GAAG,IAAI;QAEjBA,MAAM,GAAG,CAACO,QAAQ,CAACE,KAAK,CAAC,SAAS,CAAC;QACnCT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,QAAQ,CAAC;QAC5CT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,YAAY,CAAC;QAChDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,YAAY,CAAC;QAChDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,gBAAgB,CAAC;QACpDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,YAAY,CAAC;QAChDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,iBAAiB,CAAC;QACrDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,oBAAoB,CAAC;QACxDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,cAAc,CAAC;QAClDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,WAAW,CAAC;QAC/CT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,aAAa,CAAC;QACjDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,aAAa,CAAC;QACjDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,iBAAiB,CAAC;QACrDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,cAAc,CAAC;QAClDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,SAAS,CAAC;QAC7CT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,cAAc,CAAC;QAClDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,oBAAoB,CAAC;QACxDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,gBAAgB,CAAC;QACpDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,kBAAkB,CAAC;QACtDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,YAAY,CAAC;QAChDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,YAAY,CAAC;QAChDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,WAAW,CAAC;QAE/C,OAAOT,MAAM;MACd,CAAC,CAAC;;MAEF;MACA,KAAK,MAAMV,OAAO,IAAII,eAAe,EAAE;QACtCJ,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,OAAO,EAAE,YAAY,CAAC;QAC1DpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC;QACvDpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,QAAQ,EAAE,UAAU,CAAC;QACzDpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC;QACxDpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC;QACzDpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,UAAU,EAAE,SAAS,CAAC;QAC1DpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC;QACtDpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,eAAe,EAAE,SAAS,CAAC;QAC/DpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC;QACvDpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,gBAAgB,EAAE,oBAAoB,CAAC;QAC3EpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,gBAAgB,EAAE,qBAAqB,CAAC;QAC5EpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;QAClDpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,UAAU,EAAE,aAAa,CAAC;QAC9DpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,aAAa,EAAE,gBAAgB,CAAC;QACpEpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,eAAe,EAAE,mBAAmB,CAAC;QACzEpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,kBAAkB,EAAE,sBAAsB,CAAC;QAC/EpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC;QAC1DpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,uBAAuB,EAAE,OAAO,CAAC;QACrEpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,sBAAsB,EAAE,MAAM,CAAC;MACpE;IACD,CAAC,MAAM;MACN;MACAhB,eAAe,GAAGQ,YAAY,CAACC,MAAM,CAAC,CAACC,KAAK,EAAEC,KAAK,EAAEC,GAAG,KAAK;QAC5D,IAAIC,QAAQ,GAAGH,KAAK,CAACI,IAAI;QACzB,IAAIR,MAAM,GAAG,IAAI;QAEjBA,MAAM,GAAG,CAACO,QAAQ,CAACE,KAAK,CAAC,SAAS,CAAC;QACnCT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,QAAQ,CAAC;QAC5CT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,YAAY,CAAC;QAChDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,gBAAgB,CAAC;QACpDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,iBAAiB,CAAC;QACrDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,oBAAoB,CAAC;QACxDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,cAAc,CAAC;QAClDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,WAAW,CAAC;QAC/CT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,aAAa,CAAC;QACjDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,aAAa,CAAC;QACjDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,iBAAiB,CAAC;QACrDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,SAAS,CAAC;QAC7CT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,YAAY,CAAC;QAChDT,MAAM,GAAGA,MAAM,IAAI,CAACO,QAAQ,CAACE,KAAK,CAAC,YAAY,CAAC;QAEhD,OAAOT,MAAM;MACd,CAAC,CAAC;;MAEF;MACA,KAAK,MAAMV,OAAO,IAAII,eAAe,EAAE;QACtCJ,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,OAAO,EAAE,YAAY,CAAC;QAC1DpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC;QACtDpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,eAAe,EAAE,SAAS,CAAC;QAC/DpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC;QACvDpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,gBAAgB,EAAE,oBAAoB,CAAC;QAC3EpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,gBAAgB,EAAE,qBAAqB,CAAC;QAC5EpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;QAClDpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,eAAe,EAAE,mBAAmB,CAAC;QACzEpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,kBAAkB,EAAE,sBAAsB,CAAC;QAC/EpB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI,CAACE,OAAO,CAAC,cAAc,EAAE,iBAAiB,CAAC;MACvE;IACD;IAEA,OAAOhB,eAAe;EACvB;EAEAjB,gBAAgBA,CAAA,EAAG;IAClB,IAAIkC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC5C,KAAK,CAACI,WAAW,CAACyC,MAAM,CAAC;IACvE,IAAIC,OAAO,GAAGJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC5C,KAAK,CAACI,WAAW,CAACyC,MAAM,CAAC;IAEvE,IAAI,CAACjC,QAAQ,CAACmB,SAAS,IAAI;MAC1B,OAAO;QACN1B,eAAe,EAAE0B,SAAS,CAAC3B,WAAW,CAACqC,OAAO,CAAC;QAC/CnC,eAAe,EAAEyB,SAAS,CAAC3B,WAAW,CAAC0C,OAAO;MAC/C,CAAC;IACF,CAAC,CAAC;EACH;EAEAC,WAAWA,CAAC3B,OAAO,EAAE;IACpB,IAAI4B,QAAQ;IACZ,IAAI,IAAI,CAAChD,KAAK,CAACC,cAAc,EAAE;MAC9B+C,QAAQ,GAAG,oCAAoC,GAAG5B,OAAO,CAACkB,IAAI,GAAG,MAAM;IACxE,CAAC,MAAM;MACN,IAAIW,SAAS,GAAG7B,OAAO,CAAC8B,OAAO,CAACC,KAAK;MACrCH,QAAQ,GAAGC,SAAS,CAAC,kBAAkB,CAAC,CAAC,eAAe,CAAC;IAC1D;IAEA,OAAOD,QAAQ;EAChB;EAEAI,MAAMA,CAAA,EAAG;IACR,IAAIC,MAAM,GAAG,IAAI,CAACrD,KAAK,CAACK,eAAe,IAAI,IAAI,CAACL,KAAK,CAACM,eAAe;IACrE,IAAIgD,SAAS;IAEb,IAAID,MAAM,EAAE;MACX,IAAIE,SAAS,GAAG,IAAI,CAACR,WAAW,CAAC,IAAI,CAAC/C,KAAK,CAACK,eAAe,CAAC;MAC5D,IAAImD,SAAS,GAAG,IAAI,CAACT,WAAW,CAAC,IAAI,CAAC/C,KAAK,CAACM,eAAe,CAAC;MAC5D,IAAImD,cAAc,GAAGjE,QAAQ,GAAG,oBAAoB,GAAG,aAAa;MAEnE8D,SAAS,gBACT3D,OAAA;QAAA+D,QAAA,eACC/D,OAAA;UAAA+D,QAAA,gBACC/D,OAAA;YACCgE,SAAS,EAAEF,cAAe;YAC1BG,GAAG,EAAEL,SAAU;YACfM,GAAG,EAAE,IAAI,CAAC7D,KAAK,CAACK,eAAe,CAACiC;UAAK;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC,eACFtE,OAAA;YACCgE,SAAS,EAAEF,cAAe;YAC1BG,GAAG,EAAEJ,SAAU;YACfK,GAAG,EAAE,IAAI,CAAC7D,KAAK,CAACM,eAAe,CAACgC;UAAK;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACL;IACF,CAAC,MAAM;MACN,IAAIC,UAAU,GAAGxB,IAAI,CAACC,KAAK,CAAE,IAAI,CAAC3C,KAAK,CAACG,mBAAmB,GAAG,IAAI,CAACH,KAAK,CAACE,iBAAiB,GAAI,GAAG,CAAC;MAClGoD,SAAS,gBACR3D,OAAA;QAAA+D,QAAA,GAAI,WAAS,EAACQ,UAAU,EAAC,OAAK;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAClC;IACF;IAEA,oBACCtE,OAAA;MAAA+D,QAAA,EACEJ;IAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAER;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}